spring:
  application:
    name: loan-manager-api
  
  profiles:
    include:
      - oauth
  
  # PostgreSQL 연결 설정
  datasource:
    url: jdbc:postgresql://${DB_URL:localhost}:${DB_PORT:5432}/${DB_NAME:mydb}
    username: ${DB_USERNAME:loan-user}
    password: ${DB_PASSWORD:loan-1234}
    driver-class-name: org.postgresql.Driver
  
  # 개발 도구 설정
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  #  show-sql: true: 실행되는 SQL 쿼리를 콘솔에 출력
  #  format_sql: true: SQL 쿼리를 보기 좋게 포맷팅
  #  highlight_sql: true: SQL 쿼리에 하이라이트 적용
  #  use_sql_comments: true: JPQL 주석도 함께 출력
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        highlight_sql: true

  # Redis 설정 (Spring Boot 3.x 버전)
  data:
    redis:
      host: localhost
      port: 6379    

#      password: # 필요한 경우
#      database: 0 # Redis 데이터베이스 인덱스 (0-15)
#      timeout: 60000 # 연결 타임아웃 (ms)
#      lettuce:
#        pool:
#          max-active: 8 # 풀의 최대 연결 수
#          max-idle: 8 # 풀의 최대 유휴 연결 수
#          min-idle: 0 # 풀의 최소 유휴 연결 수
#          max-wait: -1 # 풀이 바쁠 때 연결을 기다리는 최대 시간 (-1은 무제한)


# JWT Configuration
jwt:
  secret: growtogether123456789012345678901234567890
  expiration-seconds: 86400
  refresh-token-validity-in-milliseconds: 604800000

# Logging Configuration
logging:
  #file:
  #  name: logs/application.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    com:  
      gt: DEBUG
    org:
      springframework:
        web: INFO
        hibernate: debug
        SQL: debug
      hibernate:
        #SQL: debug
        type:
          descriptor:
            sql: TRACE
